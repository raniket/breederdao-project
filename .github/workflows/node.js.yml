# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # build:
  #   name: Build and test
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [17.x]
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'npm'
  #   - run: npm ci
  #   - run: npm run build --if-present
  #   - run: npm test

  deploy:
    # needs: build
    name: Deploy to EC2
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the files
      uses: actions/checkout@v2
    - name: Deploy to EC2 Server
      uses: easingthemes/ssh-deploy@main
      env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}
    - name: Restart the node.js app
      # run: |
      #     echo "$SSH_PRIVATE_KEY" > private_key && chmod 600 private_key
      #     # cat private_key
      #     ssh -o StrictHostKeyChecking=no -i private_key ${USERNAME}@${HOST_DNS} '
          
      #       #Now we have got the access of EC2 and we will start the deploy .
      #       # cd /home/ec2-user/breederdao-project &&
      #       # npm run build && npm run start
      #     '
      # run: echo "$SSH_PRIVATE_KEY" > private_key && chmod 600 private_key && ssh -i private_key ${USERNAME}@${HOST_DNS}
    #   run: touch private.cer && echo ${{ secrets.EC2_SSH_KEY }} > private.cer && cat private.cer
    # - name: Do ssh
    #   run: ssh -o StrictHostKeyChecking=no -i private.cer ${USERNAME}@${HOST_DNS} 
      run: |
          mkdir -p ~/.ssh/
          touch ~/.ssh/private.key
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/private.key
          sudo chmod 600 ~/.ssh/private.key
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
          ssh -i ~/.ssh/private.key ${USERNAME}@${HOST_DNS} "cd /home/ec2-user/breederdao-project && npm run build && npm run start"
      shell: bash