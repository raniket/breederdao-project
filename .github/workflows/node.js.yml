name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # build:
  #   name: Build And Test
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [17.x]
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'npm'
  #   - run: npm ci
  #   - run: npm run build --if-present
  #   - run: npm test
  #   - name: Setup the .env file
  #     env:
  #       STAGING_ENV_FILE: ${{ secrets.STAGING_ENV_FILE }}
  #       PRODUCTION_ENV_FILE: ${{ secrets.PRODUCTION_ENV_FILE }}
  #     run: touch .env && echo ${PRODUCTION_ENV_FILE} > .env && chmod 777 .env && cat .env && ls -la

  deploy:
    # needs: build
    name: Deploy to EC2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the files
        uses: actions/checkout@v2
        with:
          clean: "false"
      - name: Deploy to EC2 Server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}
      - name: Run deploy script
        run: ./.github/scripts/deploy.sh
        shell: bash
      - name: Setup the .env file
        env:
          STAGING_ENV_FILE: ${{ secrets.STAGING_ENV_FILE }}
          PRODUCTION_ENV_FILE: ${{ secrets.PRODUCTION_ENV_FILE }}
        run: touch .env && chmod 777 .env && echo ${PRODUCTION_ENV_FILE} > .env && cat .env && ls -la
      - name: Restart the node app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd breederdao-project
            npm install
            npm run build
            npm run start
